--Batiments :

  -Batiment(#nomB : string , superficieB : int , addrGPS : string , nbEtage : int)

--Dans les batiments :
  
  -Etage(#nomBat => Batiment , #numEtage : int , planEtage : image)
 
  -Salle(#numE => Etage , #nomS : string , superficieS : int , capaciteHumMax : int , planSalle : image , airComprime : boolean , elecTriphase : boolean , nbPriseElec : int , nbPriseResaux : int)
     *Attention,il y a des normalisation ici sur les salles :
       -PhotoSalle(#nom_Salle => Salle , #photos : image)
       -GazSpecifique(#nomSalle => Salle , #Gaz : {Butane, méthane, oxygène, azote, hydrogène, hélium})
  
  Contraintes :  Projection(Batiment,nomB) = Projection(Etage,nomBat)
                 Projection(Etage,numEtage) = Projection(Salle,numE)


--Les objets qui peuvent se trouver dans les salles :
  
  //-----On utilise l'heritage par mere ici comme il n'y a pas d'association et les autres attributs sur les files de la classe 'Machine'-----//
  -Machine(#codeMach : string , #sallemach => Salle , type : {Mach_labo , Mach_fabr} , modeleMach : image , description : text , puissanceElec : int , besoinTriphase : boolean , besoinResaux : boolean , besoinGaz : {Butane, méthane, oxygène, azote, hydrogène, hélium} , NCM : int , EM : string , taille : int)
  
  -MoyenIT(#nomIT : string , #salleIT => Salle , #MachineLie => Machine , #resp => Employe , typeIT : {PC,portable,serveur} , OS : string)
      *Normalisation: AddressMoyenIT(#mIT => MoyenIT , #addr : string)
  
  -PosteTele(#nuInt : int , nuExt : int , #salletele => Salle , typeTele :{VOIP,TOIP,Landline} , medeleTele : image , marque : text , #host => Employe)
 
  -Employe(#numBadge : int , #salleEmploye => Salle , nom : string , prenom : string , e-mail : string , statut : {CDI,CDD,stagiaire} , emplacement : text)

  Contraintes : Projection(Salle,nomS) = Proection(Machine,salleMach) AND Projection(Salle,nomS) = Proection(MoyenIT,salleIT) AND Projection(Salle,nomS) = Proection(PosteTele,salletele) AND Projection(Salle,nomS) = Proection(Employe,salleEmploye)
                Projection(PosteTele,host) = Projection(Employe,numBadge) OR Projection(PosteTele,host) = {}
                Projection(MoyenIT,resp) = Projection(Employe,numBadge) OR Projection(MoyenIT,resp) = {}
                Projection(MoyenIT,MachineLie) = Projection(Machine,codeMach) OR Projection(MoyenIT,MachineLie) = {}

                
--Les organisations :
  
  -
  
  //----C'est le cas d'héritage non complet avec classe mère abstraite (sans association ni clé au niveau de la classe mère),
        donc on choisit un héritage par les classes filles.  
        Ici , la classe Organisation est une classe mère abstraite avec aucune clé et l'association-----//
        
  -Laboratoire(#sigle : string , nom : string , logo : image , thmatique_etude : text)
  
  -Departement(#sigle : string , nom : string , domaine : text)
  
  -Projet(#sigle : string , nom : string , description : text , date_start : date , date_end : date)
  
 Contraintes:  
              
               

--Les relations entre les organisations et les employés : 

  --Entre les laboratoires et les employés :
    -RHlabo(#Labo => Laboratoire(sigleL) , #EmployeL => Employe(numBadge) , directeurL : boolean)
    
    Rq : La methode droite_direcL permet aux directeurs des laboratoires de choisir leurs membres et les acteurs des projets(mis au niveau applicatif)
    
  --Entre les departements et les employés :
    -RHdepartement(#dep => Departement(sigleD) , #EmployeD => Employe(numBadge) , directeurD : boolean)
    
    Rq : La methode droite_direcD permet aux directeurs des departements de choisir leurs membres et les acteurs des projets(mis au niveau applicatif)
    
  --Entre les projets et les employés :
    -RHprojet(#proj => Projet(sigleP) , #EmployeP => Employe(numBadge) , chef : boolean , role : string)
    
    Rq : La methode droite_chef permet de definir les roles des acteurs(mis au niveau applicatif)
    
  Contraintes : Projection(RHlabo,Labo) = Projection(Laboratoire,sigleL) AND Projjection(RHlabo,EmployeL) = Projection(Employe,numBadge)
                Projection(RHdepartement,dep) = Projection(Departement,sigleD) AND Projjection(RHdepartement,EmployeD) = Projection(Employe,numBadge)
                Projection(RHprojet,proj) = Projection(Projet,sigleP) AND Projjection(RHprojet,EmployeP) = Projection(Employe,numBadge)